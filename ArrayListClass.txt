package com.example.javalist;


public class ArrayListClass<E> implements CommonFunctions<E>{
    private Object[] ArrayElement = {};

    private int defaultSize = 10;
    private int size = 0;

    public ArrayListClass() {
        this.ArrayElement = new Object[defaultSize];
    }
    public ArrayListClass(int size) {
        this.ArrayElement = new Object[size];
        this.defaultSize = size;
    }
    public int ArraySize() {
        return size;
    }
    public void add(E e) {
        ArrayElement[size] = e;
        size++;
        if(size == ArrayElement.length) {
            ArrayElement = extendSizeOfArray(ArrayElement, ArrayElement.length * 2);
        }
    }

    public Object[] extendSizeOfArray(Object[] actualArray, int size) {
        Object[] NewSizeArrayElement = new Object[size];
        for(int index = 0 ;index<actualArray.length;index++) {
            NewSizeArrayElement[index] = actualArray[index];
        }
        return NewSizeArrayElement;
    }

    public void checkIndex(int index,int size)  {
        if(index >= size || index < 0) {
            throw new IndexOutOfBoundsException("index is gtreater then list size");
        }
    }
    public E get(int index) throws IndexOutOfBoundsException{
//		checkIndex(index, size);
        return (E) ArrayElement[index];
    }
    public E remove(int index) {
        checkIndex(index, size);
        E oldValue = (E) ArrayElement[index];
        for (int i = index;i<size-1;i++) {
            ArrayElement[i] = ArrayElement[i+1];
        }
        size--;
        return(oldValue);
    }
    public int indexOf(E e) {
        for(int i = 0; i < size;i++) {
            if(ArrayElement[i] == e) {
                return i;
            }
        }
        return -1;
    }
    public void clear() {
        Object EmptyArray[] = new Object[0];
        this.ArrayElement = EmptyArray;
        this.size = 0;
    }
    public boolean contains(E e) {
        for(int i = 0; i < size;i++) {
            if(ArrayElement[i] == e) {
                return true;
            }
        }
        return false;
    }
}
